{\rtf1\ansi\ansicpg1252\cocoartf2758
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include <iostream>\
\
using namespace std;\
\
void swap(int& a, int& b) \{\
    int temp = a;\
    a = b;\
    b = temp;\
\}\
\
// Deterministic QuickSort Partition\
int partitionDet(int arr[], int start, int end) \{\
    int pivot = arr[start];\
    int i = start;\
\
    for (int j = start + 1; j <= end; j++) \{\
        if (arr[j] <= pivot) \{\
            i++;\
            swap(arr[i], arr[j]);\
        \}\
    \}\
\
    swap(arr[i], arr[start]);\
\
    return i;\
\}\
\
// Randomized QuickSort Partition\
int partitionRand(int arr[], int start, int end) \{\
    // Custom pseudo-random number generator without ctime and cstdlib\
    static unsigned int seed = 5323; // Seed value (you can choose any value)\
    seed = (8253729 * seed + 2396403); // Simple custom algorithm\
    int randomIndex = start + (seed % (end - start + 1));\
\
    swap(arr[randomIndex], arr[end]);\
\
    return partitionDet(arr, start, end);\
\}\
\
// QuickSort\
void quickSort(int arr[], int start, int end, bool randomized) \{\
    if (start < end) \{\
        int pivotIndex;\
\
        if (randomized) \{\
            pivotIndex = partitionRand(arr, start, end);\
        \} else \{\
            pivotIndex = partitionDet(arr, start, end);\
        \}\
\
        quickSort(arr, start, pivotIndex - 1, randomized);\
        quickSort(arr, pivotIndex + 1, end, randomized);\
    \}\
\}\
\
int main() \{\
    int n, choice;\
    char ch;\
\
    do \{\
        cout << "\\n*************Menu***************";\
        cout << "\\n1. Deterministic Variant";\
        cout << "\\n2. Randomized Variant";\
        cout << "\\n3. Exit";\
        cout << "\\n********************************";\
        cout << "\\nEnter Choice:";\
        cin >> choice;\
\
        if (choice == 1 || choice == 2) \{\
            cout << "\\nEnter Total No. of Elements:";\
            cin >> n;\
            int arr[n];\
\
            for (int i = 0; i < n; i++) \{\
                cout << "\\nEnter Element " << i + 1 << ":";\
                cin >> arr[i];\
            \}\
\
            cout << "\\nOriginal array: ";\
            for (int i = 0; i < n; i++) \{\
                cout << arr[i] << " ";\
            \}\
\
            bool randomized = (choice == 2);\
\
            quickSort(arr, 0, n - 1, randomized);\
\
            cout << "\\n\\nSorted array using ";\
            if (randomized) \{\
                cout << "Randomized Variant: ";\
            \} else \{\
                cout << "Deterministic Variant: ";\
            \}\
\
            for (int i = 0; i < n; i++) \{\
                cout << arr[i] << " ";\
            \}\
        \} else if (choice == 3) \{\
            exit(0);\
        \} else \{\
            cout << "\\n You Entered Wrong Choice";\
        \}\
\
        cout << "\\n\\nDo you want to continue:";\
        cin >> ch;\
    \} while (ch == 'Y' || ch == 'y');\
\
    return 0;\
\}\
}